{"version":3,"sources":["components/Employees/Employee.js","components/Employees/Employees.js","components/EmployeesBirth/EmployeesBirth.js","App.js","redux/mainReducer.js","reportWebVitals.js","index.js"],"names":["Employee","props","changeActive","state","info","firstName","lastName","day","month","year","status","addBirthday","removeBirthday","className","style","color","name","id","type","defaultChecked","onChange","Employees","result","useState","data","setData","useEffect","a","axios","get","then","fetchData","useFetch","monthNames","optomizationDate","apiDate","value","date","Date","charA","charZ","arr","i","charCodeAt","j","push","String","fromCharCode","genCharArray","map","letter","index","employeeInfo","employee","checkStatus","birthArray","item","localStorage","setItem","JSON","stringify","dob","getDate","getMonth","getFullYear","EmployeesBirth","arrMonth","splice","flatten","array","reduce","sum","Array","isArray","concat","filter","indexOf","length","mapDispatchToProps","createBirthArr","payload","removeBirthArr","connect","newBirthArray","initState","mainReducer","action","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","persistedState","getItem","temporaryArr","parse","getCorrectState","store","createStore","subscribe","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9eedd4e8.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Employee = props => {\r\n\tconst changeActive = state => {\r\n\t\tconst info = {\r\n\t\t\tfirstName: props.firstName,\r\n\t\t\tlastName: props.lastName,\r\n\t\t\tday: props.day,\r\n\t\t\tmonth: props.month,\r\n\t\t\tyear: props.year,\r\n\t\t\tstatus: props.status,\r\n\t\t};\r\n\r\n\t\tif (state === true) {\r\n\t\t\tinfo.status = true;\r\n\t\t\tprops.addBirthday(info);\r\n\t\t}\r\n\t\tif (state === false) {\r\n\t\t\tinfo.status = false;\r\n\t\t\tprops.removeBirthday(info);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"Employee\">\r\n\t\t\t<div\r\n\t\t\t\tclassName=\"Employee__name\"\r\n\t\t\t\tstyle={props.status ? { color: \"blue\" } : { color: \"black\" }}\r\n\t\t\t>\r\n\t\t\t\t{props.lastName} {props.firstName}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"Employee__radio-btns\">\r\n\t\t\t\t<label className=\"radio\">\r\n\t\t\t\t\tnot-active\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tname={props.id}\r\n\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\tid=\"no-active\"\r\n\t\t\t\t\t\tdefaultChecked={!props.status}\r\n\t\t\t\t\t\tonChange={() => changeActive(false)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</label>\r\n\t\t\t\t<label className=\"radio\">\r\n\t\t\t\t\tactive\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tname={props.id}\r\n\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\tid=\"active\"\r\n\t\t\t\t\t\tdefaultChecked={props.status}\r\n\t\t\t\t\t\tonChange={() => changeActive(true)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</label>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Employee;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Employee from \"./Employee\";\r\nimport axios from \"axios\";\r\n\r\nlet useFetch = () => {\r\n\tconst [data, setData] = useState(null);\r\n\tconst requestUrl =\r\n\t\t\"https://yalantis-react-school-api.yalantis.com/api/task0/users\";\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchData = async () => {\r\n\t\t\tawait axios.get(requestUrl).then(data => setData(data.data));\r\n\t\t};\r\n\t\tfetchData();\r\n\t}, []);\r\n\treturn data;\r\n};\r\n\r\nconst Employees = props => {\r\n\tconst result = useFetch();\r\n\r\n\tconst genCharArray = (charA, charZ) => {\r\n\t\tlet arr = [],\r\n\t\t\ti = charA.charCodeAt(0),\r\n\t\t\tj = charZ.charCodeAt(0);\r\n\t\tfor (; i <= j; ++i) {\r\n\t\t\tarr.push(String.fromCharCode(i));\r\n\t\t}\r\n\t\treturn arr;\r\n\t};\r\n\r\n\tconst monthNames = [\r\n\t\t\"January\",\r\n\t\t\"February\",\r\n\t\t\"March\",\r\n\t\t\"April\",\r\n\t\t\"May\",\r\n\t\t\"June\",\r\n\t\t\"July\",\r\n\t\t\"August\",\r\n\t\t\"September\",\r\n\t\t\"October\",\r\n\t\t\"November\",\r\n\t\t\"December\",\r\n\t];\r\n\r\n\tconst optomizationDate = apiDate => {\r\n\t\tconst date = new Date(apiDate);\r\n\t\tconst checkZero = value => {\r\n\t\t\treturn value < 10 ? \"0\" + value : value;\r\n\t\t};\r\n\t\treturn checkZero(date);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"Employees\">\r\n\t\t\t<h1>Employees</h1>\r\n\t\t\t<div className=\"wrapper\">\r\n\t\t\t\t{genCharArray(\"A\", \"Z\").map((letter, index) => {\r\n\t\t\t\t\tconst employeeInfo =\r\n\t\t\t\t\t\tresult &&\r\n\t\t\t\t\t\tresult.map(employee => {\r\n\t\t\t\t\t\t\t// Checking items for localStorage, and if was active so then display active status\r\n\t\t\t\t\t\t\tlet checkStatus;\r\n\t\t\t\t\t\t\tprops.birthArray.map(item => {\r\n\t\t\t\t\t\t\t\tif (item.status && item.lastName === employee.lastName) {\r\n\t\t\t\t\t\t\t\t\tcheckStatus = item.status;\r\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem(\r\n\t\t\t\t\t\t\t\t\t\t\"dataEmployees\",\r\n\t\t\t\t\t\t\t\t\t\tJSON.stringify(props.birthArray)\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tif (employee.lastName[0] === letter) {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<Employee\r\n\t\t\t\t\t\t\t\t\t\tkey={employee.id}\r\n\t\t\t\t\t\t\t\t\t\tfirstName={employee.firstName}\r\n\t\t\t\t\t\t\t\t\t\tlastName={employee.lastName}\r\n\t\t\t\t\t\t\t\t\t\tday={optomizationDate(employee.dob).getDate()}\r\n\t\t\t\t\t\t\t\t\t\tmonth={\r\n\t\t\t\t\t\t\t\t\t\t\tmonthNames[optomizationDate(employee.dob).getMonth()]\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tyear={optomizationDate(employee.dob).getFullYear()}\r\n\t\t\t\t\t\t\t\t\t\taddBirthday={props.addBirthday}\r\n\t\t\t\t\t\t\t\t\t\tremoveBirthday={props.removeBirthday}\r\n\t\t\t\t\t\t\t\t\t\tbirthArray={props.birthArray}\r\n\t\t\t\t\t\t\t\t\t\tid={employee.id}\r\n\t\t\t\t\t\t\t\t\t\tstatus={checkStatus}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div className=\"block\" key={index}>\r\n\t\t\t\t\t\t\t<p>{letter}</p>\r\n\t\t\t\t\t\t\t<div className=\"employee-info\">{employeeInfo}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Employees;\r\n","import React from \"react\";\r\n\r\nconst EmployeesBirth = props => {\r\n\tlet monthNames = [\r\n\t\t\"January\",\r\n\t\t\"February\",\r\n\t\t\"March\",\r\n\t\t\"April\",\r\n\t\t\"May\",\r\n\t\t\"June\",\r\n\t\t\"July\",\r\n\t\t\"August\",\r\n\t\t\"September\",\r\n\t\t\"October\",\r\n\t\t\"November\",\r\n\t\t\"December\",\r\n\t];\r\n\t// Modifying the array to start display employees from the current month\r\n\tlet arrMonth = [];\r\n\tmonthNames.map((item, index) => {\r\n\t\tif (monthNames[new Date().getMonth()] === item) {\r\n\t\t\tlet arr = monthNames.splice(0, index);\r\n\t\t\tmonthNames.push(arr);\r\n\t\t}\r\n\t});\r\n\tconst flatten = array => {\r\n\t\treturn array.reduce((sum, item) => {\r\n\t\t\treturn Array.isArray(item)\r\n\t\t\t\t? sum.concat(flatten(item))\r\n\t\t\t\t: sum.concat([item]);\r\n\t\t}, []);\r\n\t};\r\n\tmonthNames = flatten(monthNames);\r\n\r\n\treturn (\r\n\t\t<div className=\"EmployeesBirthList\">\r\n\t\t\t<h1>Employees Birthday</h1>\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t{monthNames.map(month => {\r\n\t\t\t\t\tprops.birthArray.map(item => {\r\n\t\t\t\t\t\tif (item.month === month) {\r\n\t\t\t\t\t\t\tarrMonth.push(month);\r\n\t\t\t\t\t\t\tarrMonth = arrMonth.filter((arrMonth, index, arr) => {\r\n\t\t\t\t\t\t\t\treturn arr.indexOf(arrMonth) === index;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t})}\r\n\t\t\t\t{props.birthArray.length === 0\r\n\t\t\t\t\t? \"Employees List is empty\"\r\n\t\t\t\t\t: arrMonth.map((month, index) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<ul className=\"EmployeeList\" key={index}>\r\n\t\t\t\t\t\t\t\t\t<p className=\"EmployeeList__month\">{month}</p>\r\n\t\t\t\t\t\t\t\t\t{props.birthArray.map((item, index) => {\r\n\t\t\t\t\t\t\t\t\t\tif (item.month === month) {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{item.lastName} {item.firstName} - {item.day}{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{item.month}, {item.year} year\r\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t  })}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default EmployeesBirth;\r\n","import React  from \"react\";\nimport './App.scss';\nimport Employees from './components/Employees/Employees';\nimport EmployeesBirth from './components/EmployeesBirth/EmployeesBirth';\nimport {connect} from 'react-redux';\n\nconst App = props => {\n\n  return (\n    <div className=\"App\">\n      <Employees \n        addBirthday = {props.createBirthArr}\n        removeBirthday = {props.removeBirthArr}\n        birthArray = {props.newBirthArray}\n      />\n      <EmployeesBirth \n        birthArray = {props.newBirthArray}\n      />\n    </div>\n  );\n}\n\nconst createBirthArr = employee => {\n  return {\n    type : 'ACTIVE',\n    payload : employee\n  }\n}\nconst removeBirthArr = employee => {\n  return {\n    type : 'NOT-ACTIVE',\n    payload : employee\n  }\n}\n\nconst mapDispatchToProps = {\n  createBirthArr,\n  removeBirthArr\n}\nconst mapStateToProps = state => {\n  return {\n    newBirthArray : state.data\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const initState = {\r\n\tdata: [],\r\n};\r\n\r\nconst mainReducer = (state = initState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"ACTIVE\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: state.data.concat([action.payload]),\r\n\t\t\t};\r\n\t\tcase \"NOT-ACTIVE\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: state.data.filter(item => {\r\n\t\t\t\t\treturn item.firstName !== action.payload.firstName;\r\n\t\t\t\t}),\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\nexport default mainReducer;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { createStore } from \"redux\";\nimport mainReducer from \"./redux/mainReducer\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\n\nconst initState = {\n\tdata: [],\n};\n\nconst getCorrectState = () => {\n\tlet temporaryArr = JSON.parse(localStorage.getItem(\"dataEmployees\"));\n\treturn { data: [...temporaryArr] };\n};\n\nconst persistedState = localStorage.getItem(\"dataEmployees\")\n\t? getCorrectState()\n\t: initState;\n\nconst store = createStore(mainReducer, persistedState);\n\nstore.subscribe(() => {\n\tlocalStorage.setItem(\"dataEmployees\", JSON.stringify(store.getState()));\n});\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<React.StrictMode>\n\t\t\t<App />\n\t\t</React.StrictMode>\n\t</Provider>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}